name: Integration

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]
    branches:
      - main
      - release/*
      - release-*
      - beta
  workflow_dispatch:

env:
  REDIS_URL: redis://localhost:6379/0
  NODE_ENV: test
  CI: true

concurrency:
  group: ${{ github.event.pull_request.number && format('pr-{0}', github.event.pull_request.number) || format('run-{0}', github.run_id) }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    services:
      redis:
        image: redis:8.0.3-alpine3.21
        ports:
          - 6379:6379

    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm ci
          npm i express hono ioredis

      - name: Run tests
        run: npm run test:coverage || exit 0

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: true
          disable_search: true
          files: coverage/cobertura-coverage.xml
          override_commit: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          flags: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          verbose: true
          disable_search: true
          files: junit.xml
          override_commit: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          flags: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          token: ${{ secrets.CODECOV_TOKEN }}

  bundle:
    name: Check types and bundle
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: |
          npm ci
          npm i express hono ioredis

      - name: Check types
        run: npm run typecheck

      - name: Bundle
        run: npm run bundle

  code-quality:
    name: Check code quality
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run prettier:check

      - name: Check lint
        run: npm run eslint:check

  vcs-quality:
    name: Check VCS quality
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve source code with complete history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        if: github.event_name == 'pull_request'

      - name: Retrieve source code
        uses: actions/checkout@v4
        if: github.event_name != 'pull_request'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: |
          npm ci
          npm install -D @commitlint/cli @commitlint/config-conventional

      - name: Check branch name
        run: |
          safe_regex="^(feat|((hot|bug)fix)|wip|exp|release|docs|infra|misc)/[\\da-z-/]+$"
          unsafe_regex="^(main|develop|(staging|release)([/-].*))$"

          npx validate-branch-name -r $safe_regex || npx validate-branch-name -r $unsafe_regex

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name != 'pull_request'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: |
          npx commitlint \
            --from ${{ github.event.pull_request.base.sha }} \
            --to ${{ github.event.pull_request.head.sha }} \
            --verbose
